{"ast":null,"code":"var _jsxFileName = \"/home/pratik/Desktop/React-iNoteBook/frontend/src/Context/Auth/AuthState.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useRequest from \"../../Hooks/Request\";\nimport AuthContext from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  const HOST = \"http://localhost:5000/api/auth\";\n  const checkRequest = useRequest();\n  const history = useHistory(); // Logging In\n\n  const loginUser = async _ref => {\n    let {\n      email,\n      password\n    } = _ref;\n    const response = await fetch(HOST + \"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const json = await response.json();\n    checkRequest(response.status, json.error, \"Logged in successfully\", async () => {\n      await localStorage.setItem(\"token\", JSON.stringify(json.authToken));\n      history.push(\"/\");\n    });\n  }; // Registering\n\n\n  const registerUser = async _ref2 => {\n    let {\n      name,\n      email,\n      password,\n      cPassword\n    } = _ref2;\n\n    if (password === cPassword) {\n      const response = await fetch(HOST + \"/create\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password\n        })\n      });\n      const json = await response.json();\n      checkRequest(response.status, json.error, \"Registered successfully\", async () => {\n        await localStorage.setItem(\"token\", JSON.stringify(json.authToken));\n        history.push(\"/\");\n      });\n    } else {\n      checkRequest(404, \"Passwords do not match\", \"\", () => {});\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      loginUser,\n      registerUser\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthState, \"RtQzgjyGMhbyPpCl8Ncn4GZOI1o=\", false, function () {\n  return [useRequest, useHistory];\n});\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"names":["React","useHistory","useRequest","AuthContext","AuthState","props","HOST","checkRequest","history","loginUser","email","password","response","fetch","method","headers","body","JSON","stringify","json","status","error","localStorage","setItem","authToken","push","registerUser","name","cPassword","children"],"sources":["/home/pratik/Desktop/React-iNoteBook/frontend/src/Context/Auth/AuthState.js"],"sourcesContent":["import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useRequest from \"../../Hooks/Request\";\nimport AuthContext from \"./AuthContext\";\n\nconst AuthState = (props) => {\n  const HOST = \"http://localhost:5000/api/auth\";\n\n  const checkRequest = useRequest();\n  const history = useHistory();\n\n  // Logging In\n  const loginUser = async ({ email, password }) => {\n    const response = await fetch(HOST + \"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    });\n    const json = await response.json();\n    checkRequest(\n      response.status,\n      json.error,\n      \"Logged in successfully\",\n      async () => {\n        await localStorage.setItem(\"token\", JSON.stringify(json.authToken));\n        history.push(\"/\");\n      }\n    );\n  };\n\n  // Registering\n  const registerUser = async ({ name, email, password, cPassword }) => {\n    if (password === cPassword) {\n      const response = await fetch(HOST + \"/create\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ name, email, password }),\n      });\n      const json = await response.json();\n      checkRequest(\n        response.status,\n        json.error,\n        \"Registered successfully\",\n        async () => {\n          await localStorage.setItem(\"token\", JSON.stringify(json.authToken));\n          history.push(\"/\");\n        }\n      );\n    } else {\n      checkRequest(404, \"Passwords do not match\", \"\", () => {});\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ loginUser, registerUser }}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EAC3B,MAAMC,IAAI,GAAG,gCAAb;EAEA,MAAMC,YAAY,GAAGL,UAAU,EAA/B;EACA,MAAMM,OAAO,GAAGP,UAAU,EAA1B,CAJ2B,CAM3B;;EACA,MAAMQ,SAAS,GAAG,cAA+B;IAAA,IAAxB;MAAEC,KAAF;MAASC;IAAT,CAAwB;IAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACP,IAAI,GAAG,QAAR,EAAkB;MAC5CQ,MAAM,EAAE,MADoC;MAE5CC,OAAO,EAAE;QACP,gBAAgB;MADT,CAFmC;MAK5CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QAAER,KAAF;QAASC;MAAT,CAAf;IALsC,CAAlB,CAA5B;IAOA,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAT,EAAnB;IACAZ,YAAY,CACVK,QAAQ,CAACQ,MADC,EAEVD,IAAI,CAACE,KAFK,EAGV,wBAHU,EAIV,YAAY;MACV,MAAMC,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BN,IAAI,CAACC,SAAL,CAAeC,IAAI,CAACK,SAApB,CAA9B,CAAN;MACAhB,OAAO,CAACiB,IAAR,CAAa,GAAb;IACD,CAPS,CAAZ;EASD,CAlBD,CAP2B,CA2B3B;;;EACA,MAAMC,YAAY,GAAG,eAAgD;IAAA,IAAzC;MAAEC,IAAF;MAAQjB,KAAR;MAAeC,QAAf;MAAyBiB;IAAzB,CAAyC;;IACnE,IAAIjB,QAAQ,KAAKiB,SAAjB,EAA4B;MAC1B,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAACP,IAAI,GAAG,SAAR,EAAmB;QAC7CQ,MAAM,EAAE,MADqC;QAE7CC,OAAO,EAAE;UACP,gBAAgB;QADT,CAFoC;QAK7CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UAAES,IAAF;UAAQjB,KAAR;UAAeC;QAAf,CAAf;MALuC,CAAnB,CAA5B;MAOA,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAT,EAAnB;MACAZ,YAAY,CACVK,QAAQ,CAACQ,MADC,EAEVD,IAAI,CAACE,KAFK,EAGV,yBAHU,EAIV,YAAY;QACV,MAAMC,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BN,IAAI,CAACC,SAAL,CAAeC,IAAI,CAACK,SAApB,CAA9B,CAAN;QACAhB,OAAO,CAACiB,IAAR,CAAa,GAAb;MACD,CAPS,CAAZ;IASD,CAlBD,MAkBO;MACLlB,YAAY,CAAC,GAAD,EAAM,wBAAN,EAAgC,EAAhC,EAAoC,MAAM,CAAE,CAA5C,CAAZ;IACD;EACF,CAtBD;;EAwBA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE;MAAEE,SAAF;MAAaiB;IAAb,CAA7B;IAAA,UACGrB,KAAK,CAACwB;EADT;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAzDD;;GAAMzB,S;UAGiBF,U,EACLD,U;;;KAJZG,S;AA2DN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}